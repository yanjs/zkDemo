import "hashes/sha256/512bitPadded" as sha256;
from "./Add" import add;
from "./Cmp" import cmp;
from "./Config" import N_MIX;
from "./Contains" import contains;

const u32 N_MERGE = 2;

def main(\
    u32[N_MERGE][8] nullifiers,\
    u32[N_MIX][8] mixed_note_ids,\
    u32[8] new_note_id,\
    private u32[N_MERGE][8] secrets,\
    private u32[N_MERGE][8] note_ids,\
    private u32[N_MERGE][8] amts\
) {
    // assert amt > 0
    u32[8] zero = [0;8];
    for u32 i in 0..N_MERGE {
        assert(cmp(amts[i], zero) != 0);
    }

    // assert note_id in mixed_note_ids
    for u32 i in 0..N_MERGE {
        assert(contains(mixed_note_ids, note_ids[i]));
    }

    // assert note_id == sha256(secret, amt)
    for u32 i in 0..N_MERGE {
        u32[8] exp_note_id = sha256(secrets[i], amts[i]);
        assert(exp_note_id == note_ids[i]);
    }

    // assert nullifier == sha256(secret, 0)
    for u32 i in 0..N_MERGE {
        u32[8] exp_note_id = sha256(secrets[i], zero);
        assert(exp_note_id == nullifiers[i]);
    }

    return;
}